{"version":3,"sources":["components/Person.js","components/Submit.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","Submit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","console","log","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","setNewMessage","useEffect","personService","initialPersons","updatePerson","personToUpdate","updatedPerson","updatedPersons","filter","concat","setNewMessageAndTimeout","messageToShow","setTimeout","filterForPersonNames","includes","event","target","preventDefault","map","window","confirm","find","returnedPerson","key","personName","n","deleteById","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7229160.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <li>\n      {person.name} {person.number}\n      <button onClick={deletePerson}>delete</button>\n    </li>\n  )\n}\n\nexport default Person","import React from 'react'\n\nconst Submit = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <form onSubmit={addPerson}>\n        <div>\n          name: <input \n            value={newName}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input\n            value={newNumber}\n            onChange={handleNumberChange}\n          />\n        </div>\n        <div><button type=\"submit\">add</button></div>\n      </form>\n  )\n}\n\nexport default Submit","import React from 'react'\n\nconst Filter = ({ value, onChange}) => {\n  return (\n    <div>\n      <form>\n        filter shown with <input\n          value={value}\n          onChange={onChange}\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className='notification'>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => {\n    console.log('data', response)\n    return response.data}\n    )\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request\n}\n\nconst deletePersonById = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request\n}\n\nexport default { getAll, create, update, deletePersonById }","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Submit from './components/Submit'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setNewMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const nameExists = persons.map(person => person.name)\n      .includes(newName)\n\n    if (nameExists) {\n      const result = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      )\n\n      if (result) {\n        const personToUpdate = persons.find(person => \n          person.name === newName\n        )\n        updatePerson(personToUpdate)\n      }\n\n    } else {\n      const person = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService.create(person).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewMessageAndTimeout(`Added ${person.name}`)\n      })\n    }\n    setNewNumber('')\n    setNewName('')\n  }\n\n  const updatePerson = personToUpdate => {\n    const updatedPerson = {...personToUpdate, name: newName, number: newNumber}\n    personService.update(personToUpdate.id, updatedPerson).then(response => {\n      const updatedPersons = persons.filter(person => person.name !== personToUpdate.name).concat(updatedPerson)\n      setPersons(updatedPersons)\n    })\n    setNewMessageAndTimeout(`Updated ${personToUpdate.name}`)\n  }\n\n  const deleteById = (id) => {\n    const personName = persons.find(n => n.id === id).name\n    const result = window.confirm(`Delete ${personName} ?`)\n\n    if (result) {\n      personService.deletePersonById(id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n        setNewMessageAndTimeout(`Deleted ${personName}`)\n      })\n    }\n  }\n\n  const setNewMessageAndTimeout = (messageToShow) => {\n    console.log({messageToShow})\n    setNewMessage(messageToShow)\n    setTimeout(() => {\n      setNewMessage(null)\n    }, 5000)\n  }\n  \n  const filterForPersonNames = persons.filter(person => \n    person.name.includes(newFilter)\n  )\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter value={newFilter} onChange={handleFilterChange} />\n      <h3>add a new</h3>\n      <Submit \n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <ul>\n        {filterForPersonNames.map(person => \n          <Person \n            key={person.id}\n            person={person}\n            deletePerson={() => deleteById(person.id)}\n          />\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}